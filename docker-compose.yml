# ==============================================================
# Docker compose file for local development environment
# - starts a MySQL server with no root pw
# - mounts persistent volumes for DB data and Rails bundler cache
# - mounts current working dir into the app so code changes you make
#   locally are reflected in the container
# ==============================================================

version: "3"

services:
  app:
    build:
      context: .
      dockerfile: docker/app.dev.Dockerfile
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}
      PROXYIST_URL: http://proxyist:3000
    volumes:
      - .:/rails
      - ./vendor/bundle:/usr/local/bundle

  proxy:
    image: nginx
    ports:
      - '3000:80'
      - '3443:443'
    volumes:
      - ./docker/nginx.conf-dev:/etc/nginx/conf.d/default.conf
      - ./docker/cert.pem:/etc/nginx/certs/cert.pem
      - ./docker/key.pem:/etc/nginx/certs/key.pem
    command: [nginx-debug, '-g', 'daemon off;']

  db:
    image: mysql:8
    ports:
      - '3306:3306'
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

  search:
    image: solr:8
    ports:
      - '8983:8983'
    volumes:
      - ./solr:/var/solr/data
    restart:
      unless-stopped

  proxyist:
    image: ghcr.io/paradisec-archive/proxyist
    volumes:
      - ./docker/proxyist.config.js:/usr/src/app/proxyist.config.js
    environment:
      PROXYIST_ADAPTER_NAME: '@paradisec/proxyist-adapter-s3'

  s3:
    image: adobe/s3mock
    ports:
      - '9090:9090'
    environment:
      initialBuckets: nabu
      retainFilesOnExit: true
    volumes:
      - ./tmp/s3:/s3mockroot

volumes:
  db-data:
  search-data:
