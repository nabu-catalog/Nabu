:javascript
  const result_ids = ["#{@result_ids.join('","')}"];
  sessionStorage.setItem('item_result_ids', JSON.stringify(result_ids));

-if @search.respond_to?(:any?) ? @search.any? : (@search.hits.count > 0)
  = render partial: 'items/pagination', locals: {results: @search}

%table.table
  %tr
    = sortable :identifier, 'ID'
    = sortable :title
    = sortable :collector_sortname, 'Collector'
    = sortable :language, 'Language as given'
    = sortable :sort_country, 'Countries'
    = sortable :essences_count, '# of files'
    = sortable :updated_at, 'Modification Date'
    %th Actions
    - if show_exclusions
      %th Exclude?

    - res = @search.respond_to?(:results) ? @search.results : @search
    - res.each do |item|
      %tr
        %td= item.full_identifier
        %td= item.title
        %td= item.collector.name
        %td= item.language
        %td
          - item.countries.sort_by(&:name).each do |country|
            = country.name
        %td= item.essences_count
        %td= item.updated_at.to_date
        %td
          = link_to 'View', [item.collection, item]
          = link_to 'Edit', edit_collection_item_path(item.collection, item) if can? :update, item
        - if show_exclusions
          %td
            %label{style: 'width: 100%; display: block; text-align:center'}= check_box_tag('exclude[]', item.id, false, id: "exclude_#{item.id}")

-if @search.respond_to?(:any?) ? @search.any? : (@search.hits.count > 0)
  = render partial: 'items/pagination', locals: {results: @search}
-else
  %p.bold There were NO results for your search.

%div
  - if @params
    -['10','50','100',"all #{@search.respond_to?(:total) ? @search.total : @search.total_count}"].each do |n|
      = link_to "Show #{n}", @params.permit!.merge(per_page: n.sub('all ', ''), page: n.start_with?('all') ? 1 : params[:page]), class: 'button'

  - if show_exclusions
    .right
      %button#update_exclusions{style: 'display: none;'} Exclude
      = link_to 'Clear Exclusions', @params.permit!.merge(exclusions: []) if params[:exclusions].present?
