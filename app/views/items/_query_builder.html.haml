:css
  .clause select, body.bp .clause input {
    margin: 0;
    padding: 5px 0;
    height: 26px;
    display: table-cell;
    min-width: 200px;
    width: 200px;
    max-width: 200px;
  }
  body.bp .clause input {
    padding: 2px 0 0 0;
    box-sizing: border-box;
    box-shadow: none;
  }
  .clause .select2-container {
    margin: 0;
    padding: 0;
    height: 26px;
    display: table-cell;
    min-width: 200px;
    width: 200px;
    max-width: 200px;
  }
  .clause {
    display: table;
  }
  .clause .actions {
    display: table-cell;
    padding-left: 10px;
  }
  body.bp .clause button {
    margin: 0;
    padding: 0;
    height: 26px;
    width: 26px;
    line-height: 26px;
    color: #20538d;
    font-weight: bold;
    background: white;
  }
  body.bp .clause button:focus,
  body.bp .clause button:hover {
    outline: none;
    background: #e5efff;
  }
  .input-templates {
    display: none;
  }

.input-templates
  = text_field_tag :text
  = text_field_tag :date, nil, class: 'short'
  = number_field_tag :number, nil, step: 'any'
  = select_tag :boolean, options_for_select([%w(True true), %w(False false)], nil), include_blank: true
  -# autocomplete (replace url, name and placeholder)
  = hidden_field_tag :autocomplete
  -# collection (pick by id)
  = select_tag :collection_id, options_from_collection_for_select(Collection.all, :id, :identifier, nil), include_blank: true, data: {placeholder: 'Choose a collection...'}, class: 'select2'
  = select_tag :university_id, options_from_collection_for_select(University.alpha, :id, :name, nil), include_blank: true, data: {placeholder: 'Choose a university...'}, class: 'select2'
  = select_tag :access_condition_id, options_from_collection_for_select(AccessCondition.alpha, :id, :name, nil), include_blank: true, data: {placeholder: 'Choose a data access condition...'}, class: 'select2'
  = select_tag :discourse_type_id, options_from_collection_for_select(DiscourseType.alpha, :id, :name, nil), include_blank: true, data: {placeholder: 'Choose a discourse...'}, class: 'select2'

%form.qb{action: advanced_search_items_path}
  = hidden_field_tag :per_page, params[:per_page] || 10
  = hidden_field_tag(:exclusions, params[:exclusions], class: 'exclusions')

  - (params['clause'] || {_:{}}).values.each_with_index do |clause, i|
    .clause{id: "clause[#{i}]"}
      - if i != 0
        %select.boolean-type{name: "clause[#{i}][logic]"}
          - ['AND', 'OR', 'NOT'].each do |l|
            %option{value: l, selected: l == clause['logic']}= l
      %select.field-name{name: "clause[#{i}][field]"}
        - @fields.each do |col|
          %option{value: col, selected: clause['field'] == col}= col.titleize.sub('s.Id','').sub(/ie$/,'y')
      %select.operator{name: "clause[#{i}][operator]"}
        - ItemQueryBuilder::OPERATORS.each do |op|
          %option{value: op, selected: clause['operator'] == op}= op.titleize
      %input.field-value{name: "clause[#{i}][input]", type: "text", value: clause['input'].to_s, disabled: ['is_null', 'is_not_null'].include?(clause['operator'])}
      %div.actions
        %button.remove{name: "clause[#{i}]", role: "button", type: "button"} Ã—
        %button.add{role: "button", type: "button"} +
  %button.submit{role: "submit", type: "submit"} Submit

:javascript
  var typesForFields = #{@types_for_fields.to_json};
  var usersPath = "#{users_path}";
  var languagesPath = "#{languages_path}";
  var countriesPath = "#{countries_path}";
  var dataTypesPath = "#{data_types_path}";
  var dataCategoriesPath = "#{data_categories_path}";
  var mimeTypesPath = "#{list_mimetypes_path}";

%script{:type => 'module'}
  :plain
    import 'custom/query_builder'
