{
  total: @total,

  objects: @objects.map do |object|
    class_name = object.class.name
    is_item = class_name == 'Item'

    response = {
      id: is_item ? repository_item_url(object.collection, object) : repository_collection_url(object),
      name: object.title,
      description: object.description.truncate(256),
      conformsTo: "https://w3id.org/ldac/profile##{is_item ? 'Object' : 'Collection'}",
      recordType: ['Data', 'Object', is_item ? 'RepositoryObject' : 'RepositoryCollection'],
      extra: {
        language: (is_item ? object.content_languages : object.languages).map(&:name)
      }
    }

    if is_item
      response[:memberOf] = repository_collection_url(object.collection)
      response[:root] = repository_collection_url(object.collection)
    end

    extra = response[:extra]

    extra[:objectsCount] = object.items_count if object.has_attribute?(:items_count)
    extra[:filesCount] = object.essences_count if object.has_attribute?(:essences_count)

    if object.private?
      extra[:accessControl] = 'AccessControlList'
    elsif object.access_condition.nil?
      extra[:accessControl] = 'AuthorizationByInvitation'
    elsif object.access_condition.name == 'Open (subject to agreeing to PDSC access conditions)'
      extra[:accessControl] = 'AgreeToTerms'
    else
      extra[:accessControl] = 'Public'
    end

    # TODO:: add communicationMode

    extra[:mediaType] = @mime_types

    response
  end
}
